<style>
  .extra-row {
    display: none;
  }

  .animate-slide {
    animation: slideDown 0.4s ease forwards;
  }

  @keyframes slideDown {
    from {
      opacity: 0;
      transform: translateY(-5px);
    }

    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<div class="looking-box">
  <h2 class="lookingbox-title">ARE YOU LOOKING FOR</h2>
  <div class="text-group">
    <div class="text-item"><a href="/club-stats/ucl">UCL STATS</a></div>
    <div class="text-item"><a href="/Match-History/mbappe#match-history">MATCH HISTORY</a></div>
    <div class="text-item"><a href="/int-stats/wc">WORLD CUP STATS</a></div>
    <div class="text-item"><a href="/club-stats#clubcomp">LEAGUE STATS</a></div>

    <div class="text-item"><a href="/season">STATS BY SESON</a></div>
    <div class="text-item"><a href="/alltime#final">STATS IN FINALS</a></div>
    <div class="text-item"><a href="/club-stats#clubWc">CLUB WORLD CUP</a></div>

    <div class="text-item"><a href="/season">THIS SEASON STATS(2024-25)</a></div>
    <div class="text-item"><a href="/int-stats/copa-euro">COPA/EURO</a></div>
    <div class="text-item"><a href="">HATTRICK POKER FK GOALS etc</a></div>

    <div class="text-item"><a href="/feedback#report">REPORT AN ISSUE</a></div>
    <div class="text-item"><a href="/vote#vote">VOTE NOW</a></div>
  </div>
</div>
</section>

<div class="tab-container">
  <button class="tab-btn tab" value="allTime">All Time Stats</button>
  <button class="tab-btn tab" value="thisSeason">This Season Stats</button>
  <button class="tab-btn tab" value="lastFive">Last Five Games</button>
</div>

<!-- Content Sections -->
<div id="allTime" class="stats-content">
  {{> pages/home }}
</div>

<div id="thisSeason" class="stats-content">
  {{> season/2025-26 }}
</div>

<div id="lastFive" class="stats-content">
  {{> pages/Last-five }}
</div>

{{> sts-update}}


<div class="footer2-card" onclick="location.href='/feedback#report'">
  <span>Report an issue</span>
  <span class="footer2-arrow">&#8594;</span>
</div>

<div class="footer2-card" onclick="location.href='/feedback#suggestion'">
  <span>I have a suggestion</span>
  <span class="footer2-arrow">&#8594;</span>
</div>

<script>
document.addEventListener("DOMContentLoaded", function () {
  const buttons = document.querySelectorAll(".tab-btn");
  const contents = document.querySelectorAll(".stats-content");

  function showContent(id) {
    contents.forEach(c => c.classList.remove("active"));
    buttons.forEach(b => b.classList.remove("active"));

    document.getElementById(id).classList.add("active");
    document.querySelector(`.tab-btn[value="${id}"]`).classList.add("active");
  }

  // Default = All Time Stats
  const defaultSection = "allTime";
  showContent(defaultSection);

  // Button clicks
  buttons.forEach(btn => {
    btn.addEventListener("click", function () {
      showContent(this.value);
    });
  });
});

  document.querySelectorAll('.Dt-btn2').forEach(button => {
    button.addEventListener('click', function () {
      const container = this.closest('.table-container'); // Locate the current section
      if (!container) return;

      const table = container.querySelector('table'); // Find the table inside this section
      const hiddenRows = table.querySelectorAll('.extra-row'); // Find hidden rows

      hiddenRows.forEach(row => {
        row.style.display = 'table-row'; // Show row
        row.style.animation = 'slideDown 0.4s ease'; // Optional animation
      });

      this.style.display = 'none'; // Hide "More" button
    });
  });

   window.addEventListener('DOMContentLoaded', () => {
        const hash = window.location.hash;

        if (hash === '#club', '#int') {
            const target = document.querySelector(hash);
            if (!target) return;

            const offset = 80; // adjust if you have a fixed header
            const duration = 1000;

            const targetPosition = target.getBoundingClientRect().top + window.scrollY - offset;
            const startPosition = window.scrollY;
            const distance = targetPosition - startPosition;
            let startTime = null;

            function animation(currentTime) {
                if (!startTime) startTime = currentTime;
                const timeElapsed = currentTime - startTime;
                const run = easeInOutQuad(timeElapsed, startPosition, distance, duration);
                window.scrollTo(0, run);
                if (timeElapsed < duration) requestAnimationFrame(animation);
            }

            function easeInOutQuad(t, b, c, d) {
                t /= d / 2;
                if (t < 1) return c / 2 * t * t + b;
                t--;
                return -c / 2 * (t * (t - 2) - 1) + b;
            }

            requestAnimationFrame(animation);
        }
    });

  document.addEventListener("DOMContentLoaded", function () {
    const links = document.querySelectorAll("a.dynamic-link");
    const basePath = window.location.pathname.split("/").slice(0, 2).join("/");
    // This will keep only the first subfolder, e.g., "/int-Stats"

    links.forEach(link => {
      const originalHref = link.getAttribute("href");

      // If it's already absolute or an external link, skip
      if (originalHref.startsWith("http") || originalHref.startsWith("/")) return;

      // Update href to include base path (not full current path)
      link.setAttribute("href", `${basePath}/${originalHref}`);
    });
  });

</script>